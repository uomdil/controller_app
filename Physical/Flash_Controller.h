/*
********************************************************************************************************* 
 *					 	Flash Controller file 
 *
 * (c) Copyright 2012 D2NM, All rights reserved
********************************************************************************************************* 
*/


/*
********************************************************************************************************* 
 * 						Vending machine controller 
 *
 * Filename      : Flash_Controller.h
 * Version       : V1.0
 * Programmer(s) : DIL
 *
 * Note(s)		 :
 *
 *
********************************************************************************************************* 
*/


/* 
********************************************************************************************************* 
*                                            MODULE
********************************************************************************************************* 
*/ 

#ifndef FLASH
#define FLASH
 
 
 
/* 
********************************************************************************************************* 
*                                            INCLUDE FILES 
********************************************************************************************************* 
*/ 

#include <p32xxxx.h> 
#include <plib.h>                   // include peripheral library function
#include <stdlib.h>
#include "global.h"

/* 
********************************************************************************************************* 
*                                               DEFINES
********************************************************************************************************* 
*/ 

#define NVM_PROGRAM_PAGE 0xbd008000
#define NVM_PAGE_SIZE	4096
#define NVM_ROW_SIZE	512


/* 
********************************************************************************************************* 
*                                               DATA TYPES 
********************************************************************************************************* 
*/ 


/* 
********************************************************************************************************* 
*                                               EXTERNS 
********************************************************************************************************* 
*/ 


/* 
********************************************************************************************************* 
*                                          GLOBAL VARIABLES 
********************************************************************************************************* 
*/ 


/* 
********************************************************************************************************* 
*                                              MACROS 
********************************************************************************************************* 
*/ 

/* 
********************************************************************************************************* 
*                                        FUNCTION PROTOTYPES 
********************************************************************************************************* 
*/ 

void flash_row_data(uint32* data, uint32 length);
void flash_page_data(uint32* data, uint32 length);

void erase_flash_page(uint32 number);

void write_flash_word(uint32 data, uint32 address);
void write_flash_row(uint32* data, uint32 length, uint32 page, uint32 row);
void write_flash_page(uint32* data, uint32 length, uint32 page);

uint32 read_flash_word(uint32 address);
uint32* read_flash_row(uint32 length, uint32 page, uint32 row);
uint32* read_flash_page(uint32 length, uint32 page);


/*Example
erase_flash_page(0);
uint32 name[]={1,2,3,4,5,6,7,8,9,0};
write_flash_row(name,10,0,0);
*/

/*Example
erase_flash_page(0);
uint32 name=4;
write_flash_word(name, NVM_PROGRAM_PAGE+0x200);
hal_uartWriteNumber(read_flash_word( NVM_PROGRAM_PAGE+0x200));
hal_sendChar_UART1('\n');
*/


/* 
********************************************************************************************************* 
*                                           MODULE END 
********************************************************************************************************* 
*/

#endif
